# Map<K,V>

* É uma coleção de pares chave / valor (similar aos objetos no JavaScript)
  -> Não admite repetições do objeto chave
  -> Os elementos são indexados pelo objeto chave (não possuem posição)
  -> Acesso, inserção e remoção de elementos são rápidos

* Usos comuns: cookies, local storage, qualquer modelo chave-valor

* Principais implementações:
  -> HashMap - mais rápido (operações O(1) em tabela hash) e não ordenado
  -> TreeMap - mais lento (operações O(log(n)) em árvore rubro-negra) e ordenado pelo
    compareTo do objeto (ou Comparator)
  -> LinkedHashMap - velocidade intermediária e elementos na ordem em que são adicionados

# Métodos importantes

* put(key, value), remove(key), containsKey(key), get(key)
  -> Baseado em equals e hashCode
  -> Se equals e hashCode não existirem, comparam-se os ponteiros

* clear()
* site()

* Map<K,V>
  -> keySet() - retorna um Set<K>
  -> values() - retorna uma Collection<V>
